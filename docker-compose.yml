services:
  database:
    image: bitnami/postgresql:latest
    container_name: database
    ports:
      - "${DATABASE_PORT}:5432"
    env_file: .env
    environment:
      - POSTGRES_USERNAME=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DATABASE=${DATABASE_DB}
    volumes:
      - postgres_data:/opt/bitnami/postgresql/data
    networks:
      - monitoring
  grafana:
    image: bitnami/grafana:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/opt/bitnami/grafana/data
      - ./grafana/datasource.yml:/opt/bitnami/grafana/provisioning/datasources/datasource.yml
    networks:
      - monitoring
  prometheus:
    image: bitnami/prometheus:latest
    container_name: prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - prometheus_data:/opt/bitnami/prometheus/data
      - ./prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
    networks:
      - monitoring
  redis:
    image: bitnami/redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - monitoring
  app:
    build: .
    container_name: app
    ports:
      - "${PORT}:${PORT}"
    environment:
      - DATABASE_HOST=database
      - REDIS_HOST=redis
    networks:
      - monitoring
  migrate:
    image: migrate/migrate:latest
    container_name: migrate
    command: ["-path", "/migrations", "-database", "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@database:${DATABASE_PORT}/${DATABASE_DB}?sslmode=disable", "up"]
    depends_on:
     - database
    volumes:
      - ./migrations:/migrations
    networks:
      - monitoring

volumes:
  postgres_data:
  grafana_data:
  prometheus_data:

networks:
  monitoring:
